import java.lang.Math;
import java.util.Random;

int len=6250;
int k_mer=5;
int dis_len=100;
int dna_at_pos=0;
int step=10;

String dat_pat;
//String dna_str1="ATGTCCCTGGTAGATTTGGGAAAGAAGCTTTTAGAAGCGGCACGAGCAGGTCAAGATGATGAAGTTCGTATTTTGATGGCAAATGGAGCTCCCTTTACTACAGACTGGCTGGGAACTTCTCCACTTCATCTAGCAGCACAGTATGGTCATTATTCCACCACAGAGGTACTGCTGCGAGCTGGTGTGAGCAGAGATGCCAGAACCAAAGTGGACCGAACACCATTACATATGGCAGCTTCTGAGGGCCATGCCAGCATAGTAGAGGTTTTACTTAAGCATGGTGCTGATGTCAATGCAAAGGACATGTTAAAGATGACAGCTCTCCATTGGGCCACAGAACACAATCATCAAGAGGTGGTGGAACTTTTAATCAAATATGGTGCTGATGTACACACGCAAAGTAAATTTTGTAAAACTGCATTTGATATTTCAATAGACAATGGAAATGAAGATTTAGCAGAGATATTACAGATTGCTATGCAGAACCAAATCAACACAAACCCAGAGAGTCCTGACACTGTGACAATACATGCTGCAACACCACAGTTTATCATTGGACCTGGAGGGGTGGTGAACCTAACAGATGAAACGGGTGTATCTGCTGTTCAGTTTGGAAACTCTTCTACATCAGTATTAGCTACATTAGCTGCCTTAGCTGAAGCATCTGCTCCATTGTCCAATTCTTCAGAAACTCCAGTGGCCACAGAAGAAGTAGTTACTGCAGAATCTGTGGATGGTGCCATTCAGCAAGTAGTTAGTTCAGGGGGTCAGCAAGTCATCACAATAGTTACAGATGGAATTCAGCTTGGAAATTTGCACTCTATTCCAACCAGTGGAATTGGTCAGCCCATCATTGTGACCATGCCAGATGGACAACAAGTATTAACAGTACCAGCAACAGACATTGCTGAAGAAACTGTTATAAGTGAAGAACCACCAGCTAAGAGACAATGTATCGAAATAATTGAAAACCGGGTGGAATCTGCAGAAATAGAAGTAAGGAGTCTTTTACCCGGTGTGCTTTGCCGCAGTCATCCAAAATAA";
//String dna_str1="ATGGATGAAGAA";
//String dna_str1="ATGCCGCTGGAGCTGGAGCTGTGTCCCGGGCGCTGGGTGGGCGGGCAACACCCGTGCTTCATCATTGCCGAGATCGGCCAGAACCACCAGGGCGACCTGGACGTAGCCAAGCGCATGATCCGCATGGCCAAGGAGTGTGGGGCTGATTGTGCTAAGTTCCAGAAGAGTGAGCTAGAATTCAAGTTTAATCGGAAAGCCTTGGAGAGGCCATACACCTCGAAGCATTCCTGGGGGAAGACGTACGGGGAGCACAAACGACATCTGGAGTTCAGCCATGACCAGTACAGGGAGCTGCAGAGGTACGCCGAGGAGGTTGGGATCTTCTTCACTGCCTCTGGCATGGATGAGATGGCAGTTGAATTCCTGCATGAACTGAATGTTCCATTTTTCAAAGTTGGATCTGGAGACACTAATAATTTTCCTTATCTGGAAAAGACAGCCAAAAAAGGTCGCCCAATGGTGATCTCCAGTGGGATGCAGTCAATGGACACCATGAAGCAAGTTTATCAGATCGTGAAGCCCCTCAACCCCAACTTCTGCTTCTTGCAGTGTACCAGCGCATACCCGCTCCAGCCTGAGGACGTCAACCTGCGGGTCATCTCGGAATATCAGAAGCTCTTTCCTGACATTCCCATAGGGTATTCTGGGCATGAAACAGGCATAGCGATATCTGTGGCCGCAGTGGCTCTGGGGGCCAAGGTGTTGGAACGTCACATAACTTTGGACAAGACCTGGAAGGGGAGTGACCACTCGGCCTCGCTGGAGCCTGGAGAACTGGCCGAGCTGGTGCGGTCAGTGCGTCTTGTGGAGCGTGCCCTGGGCTCCCCAACCAAGCAGCTGCTGCCCTGTGAGATGGCCTGCAATGAGAAGCTGGGCAAGTCTGTGGTGGCCAAAGTGAAAATTCCGGAAGGCACCATTCTAACAATGGACATGCTCACCGTGAAGGTGGGTGAGCCCAAAGGCTATCCTCCTGAAGACATCTTTAATCTAGTGGGCAAGAAGGTCCTGGTCACTGTTGAAGAGGATGACACCATCATGGAAGAATTGGTAGATAATCATGGCAAAAAAATCAAGTCTTAA";
//String dna_str1="ATGGCTCGAATGAACCGCCCAGCTCCTGTGGAAGTCACATACAAGAACATGAGATTTCTTATTACACACAATCCAACCAATGCGACCTTAAACAAATTTATAGAGGAACTTAAGAAGTATGGAGTTACCACAATAGTAAGAGTATGTGAAGCAACTTATGACACTACTCTTGTGGAGAAAGAAGGTATCCATGTTCTTGATTGGCCTTTTGATGATGGTGCACCACCATCCAACCAGATTGTTGATGACTGGTTAAGTCTTGTGAAAATTAAGTTTCGTGAAGAACCTGGTTGTTGTATTGCTGTTCATTGCGTTGCAGGCCTTGGGAGAGCTCCAGTACTTGTTGCCCTAGCATTAATTGAAGGTGGAATGAAATACGAAGATGCAGTACAATTCATAAGACAAAAGCGGCGTGGAGCTTTTAACAGCAAGCAACTTCTGTATTTGGAGAAGTATCGTCCTAAAATGCGGCTGCGTTTCAAAGATTCCAACGGTCATAGAAACAACTGTTGCATTCAATAA";
String dna_str1="";
String dna_str2;
String[]classes=
{"G protein coupled receptors"
,"Tyrosine kinase"
,"Tyrosine phosphatase"
,"Synthetase"
,"Synthase"
,"Ion channel"
,"Transcription factor"};

boolean key_pre=false;

Random ran=new Random(3);

Network nn;
void setup(){
  randomSeed(500);
  
  surface.setSize(1200,970);
  surface.setResizable(true);
  surface.setTitle("Loading CNN...");
  //surface.setResizable(true);
  dat_pat=sketchPath();
  
  frameRate(99999);
  nn=new Network("Network");
  
  dna_str2=Correct_DNA_Length(dna_str1,len);
  /*for(int i=0;i<nn.tot_lay_amo-1;i++){
    nn.He(i);
  }*/
  surface.setTitle("Network setup done! Loading accuracy test...");
  /*if(nn.at_epoch==0){
    nn.epo_graph.println("Epoch: "+nn.at_epoch+": NaN, train accuracy: "+"NaN"+", test accuracy: "+Test(tes_dat));
    nn.epo_graph.flush();
  }*/
}
void draw(){
  background(0);
  stroke(0);
  rectMode(CORNER);
  //println(nn.at_ite,nn.bat_siz);
  
  /*println(pos[1],pos[0]);
  println(tem_str);
  delay(10000);*/
  double[][]tem_neu=new double[1][];
  tem_neu[0]=DNA_To_Code(dna_str2);
  
  nn.SetLayer(0,tem_neu);
  
  nn.Feedforward(1);
  
  /*println();
  for(int i=0;i<nn.map_amo[nn.tot_lay_amo-1];i++){
    println(i+": "+nn.neu[nn.tot_lay_amo-1][i][0]+", "+nn.des_out[i][0]);
  }*/
  
  double[]dis_inp=DNA_To_Code(dna_str2.substring(dna_at_pos,dna_at_pos+dis_len));
  displayDNA1(dis_inp,width/20,height/2,height*20/21);
  displayDNA2(dis_inp,((width>height)?height:width)/4,height/2,height*20/21);
  displayWeightsLayer(1,height/2.7,10);
  displayOutputLayer();
  displayOutputText();
  
  surface.setTitle("DNA Displayer.");
  HighestOutputNeuron();
  if(key_pre){
    if(keyCode==UP&&dna_at_pos>0){
      dna_at_pos-=100;
    }else if(keyCode==DOWN&&dna_at_pos<len-dis_len){
      dna_at_pos+=100;
    }
    key_pre=false;
  }
  /*if(HighestOutputNeuron()!=6){
    println(true);
    delay(100000);
  }*/
}
int HighestOutputNeuron(){
  double tem_dou=nn.neu[nn.tot_lay_amo-1][0][0];
  int at_neu=0;
  println(0,nn.neu[nn.tot_lay_amo-1][0][0]);
  for(int i=1,y=nn.map_amo[nn.tot_lay_amo-1];i<y;i++){
      println(i,nn.neu[nn.tot_lay_amo-1][i][0]);
    if(nn.neu[nn.tot_lay_amo-1][i][0]>tem_dou){
      tem_dou=nn.neu[nn.tot_lay_amo-1][i][0];
      at_neu=i;
    }
  }
  return at_neu;
}

void keyPressed(){
  key_pre=true;
}
void keyReleased(){
  key_pre=false;
}
